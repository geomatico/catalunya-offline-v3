{"version":3,"file":"806.js","mappings":"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","sources":["webpack://catalunya-offline/./node_modules/@capacitor/camera/dist/esm/web.js"],"sourcesContent":["import { WebPlugin, CapacitorException } from '@capacitor/core';\nimport { CameraSource, CameraDirection } from './definitions';\nexport class CameraWeb extends WebPlugin {\n    async getPhoto(options) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            if (options.webUseInput || options.source === CameraSource.Photos) {\n                this.fileInputExperience(options, resolve);\n            }\n            else if (options.source === CameraSource.Prompt) {\n                let actionSheet = document.querySelector('pwa-action-sheet');\n                if (!actionSheet) {\n                    actionSheet = document.createElement('pwa-action-sheet');\n                    document.body.appendChild(actionSheet);\n                }\n                actionSheet.header = options.promptLabelHeader || 'Photo';\n                actionSheet.cancelable = false;\n                actionSheet.options = [\n                    { title: options.promptLabelPhoto || 'From Photos' },\n                    { title: options.promptLabelPicture || 'Take Picture' },\n                ];\n                actionSheet.addEventListener('onSelection', async (e) => {\n                    const selection = e.detail;\n                    if (selection === 0) {\n                        this.fileInputExperience(options, resolve);\n                    }\n                    else {\n                        this.cameraExperience(options, resolve, reject);\n                    }\n                });\n            }\n            else {\n                this.cameraExperience(options, resolve, reject);\n            }\n        });\n    }\n    async pickImages(_options) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve) => {\n            this.multipleFileInputExperience(resolve);\n        });\n    }\n    async cameraExperience(options, resolve, reject) {\n        if (customElements.get('pwa-camera-modal')) {\n            const cameraModal = document.createElement('pwa-camera-modal');\n            cameraModal.facingMode =\n                options.direction === CameraDirection.Front ? 'user' : 'environment';\n            document.body.appendChild(cameraModal);\n            try {\n                await cameraModal.componentOnReady();\n                cameraModal.addEventListener('onPhoto', async (e) => {\n                    const photo = e.detail;\n                    if (photo === null) {\n                        reject(new CapacitorException('User cancelled photos app'));\n                    }\n                    else if (photo instanceof Error) {\n                        reject(photo);\n                    }\n                    else {\n                        resolve(await this._getCameraPhoto(photo, options));\n                    }\n                    cameraModal.dismiss();\n                    document.body.removeChild(cameraModal);\n                });\n                cameraModal.present();\n            }\n            catch (e) {\n                this.fileInputExperience(options, resolve);\n            }\n        }\n        else {\n            console.error(`Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/web/pwa-elements.`);\n            this.fileInputExperience(options, resolve);\n        }\n    }\n    fileInputExperience(options, resolve) {\n        let input = document.querySelector('#_capacitor-camera-input');\n        const cleanup = () => {\n            var _a;\n            (_a = input.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(input);\n        };\n        if (!input) {\n            input = document.createElement('input');\n            input.id = '_capacitor-camera-input';\n            input.type = 'file';\n            input.hidden = true;\n            document.body.appendChild(input);\n            input.addEventListener('change', (_e) => {\n                const file = input.files[0];\n                let format = 'jpeg';\n                if (file.type === 'image/png') {\n                    format = 'png';\n                }\n                else if (file.type === 'image/gif') {\n                    format = 'gif';\n                }\n                if (options.resultType === 'dataUrl' ||\n                    options.resultType === 'base64') {\n                    const reader = new FileReader();\n                    reader.addEventListener('load', () => {\n                        if (options.resultType === 'dataUrl') {\n                            resolve({\n                                dataUrl: reader.result,\n                                format,\n                            });\n                        }\n                        else if (options.resultType === 'base64') {\n                            const b64 = reader.result.split(',')[1];\n                            resolve({\n                                base64String: b64,\n                                format,\n                            });\n                        }\n                        cleanup();\n                    });\n                    reader.readAsDataURL(file);\n                }\n                else {\n                    resolve({\n                        webPath: URL.createObjectURL(file),\n                        format: format,\n                    });\n                    cleanup();\n                }\n            });\n        }\n        input.accept = 'image/*';\n        input.capture = true;\n        if (options.source === CameraSource.Photos ||\n            options.source === CameraSource.Prompt) {\n            input.removeAttribute('capture');\n        }\n        else if (options.direction === CameraDirection.Front) {\n            input.capture = 'user';\n        }\n        else if (options.direction === CameraDirection.Rear) {\n            input.capture = 'environment';\n        }\n        input.click();\n    }\n    multipleFileInputExperience(resolve) {\n        let input = document.querySelector('#_capacitor-camera-input-multiple');\n        const cleanup = () => {\n            var _a;\n            (_a = input.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(input);\n        };\n        if (!input) {\n            input = document.createElement('input');\n            input.id = '_capacitor-camera-input-multiple';\n            input.type = 'file';\n            input.hidden = true;\n            input.multiple = true;\n            document.body.appendChild(input);\n            input.addEventListener('change', (_e) => {\n                const photos = [];\n                // eslint-disable-next-line @typescript-eslint/prefer-for-of\n                for (let i = 0; i < input.files.length; i++) {\n                    const file = input.files[i];\n                    let format = 'jpeg';\n                    if (file.type === 'image/png') {\n                        format = 'png';\n                    }\n                    else if (file.type === 'image/gif') {\n                        format = 'gif';\n                    }\n                    photos.push({\n                        webPath: URL.createObjectURL(file),\n                        format: format,\n                    });\n                }\n                resolve({ photos });\n                cleanup();\n            });\n        }\n        input.accept = 'image/*';\n        input.click();\n    }\n    _getCameraPhoto(photo, options) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            const format = photo.type.split('/')[1];\n            if (options.resultType === 'uri') {\n                resolve({\n                    webPath: URL.createObjectURL(photo),\n                    format: format,\n                    saved: false,\n                });\n            }\n            else {\n                reader.readAsDataURL(photo);\n                reader.onloadend = () => {\n                    const r = reader.result;\n                    if (options.resultType === 'dataUrl') {\n                        resolve({\n                            dataUrl: r,\n                            format: format,\n                            saved: false,\n                        });\n                    }\n                    else {\n                        resolve({\n                            base64String: r.split(',')[1],\n                            format: format,\n                            saved: false,\n                        });\n                    }\n                };\n                reader.onerror = e => {\n                    reject(e);\n                };\n            }\n        });\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        try {\n            // https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\n            // the specific permissions that are supported varies among browsers that implement the\n            // permissions API, so we need a try/catch in case 'camera' is invalid\n            const permission = await window.navigator.permissions.query({\n                name: 'camera',\n            });\n            return {\n                camera: permission.state,\n                photos: 'granted',\n            };\n        }\n        catch (_a) {\n            throw this.unavailable('Camera permissions are not available in this browser');\n        }\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async pickLimitedLibraryPhotos() {\n        throw this.unavailable('Not implemented on web.');\n    }\n    async getLimitedLibraryPhotos() {\n        throw this.unavailable('Not implemented on web.');\n    }\n}\nconst Camera = new CameraWeb();\nexport { Camera };\n//# sourceMappingURL=web.js.map"],"names":["CameraWeb","async","options","Promise","resolve","reject","webUseInput","source","this","fileInputExperience","actionSheet","document","querySelector","createElement","body","appendChild","header","promptLabelHeader","cancelable","title","promptLabelPhoto","promptLabelPicture","addEventListener","e","detail","cameraExperience","_options","multipleFileInputExperience","customElements","get","cameraModal","facingMode","direction","componentOnReady","photo","Error","_getCameraPhoto","dismiss","removeChild","present","console","error","input","cleanup","_a","parentNode","id","type","hidden","_e","file","files","format","resultType","reader","FileReader","dataUrl","result","b64","split","base64String","readAsDataURL","webPath","URL","createObjectURL","accept","capture","removeAttribute","click","multiple","photos","i","length","push","saved","onloadend","r","onerror","navigator","permissions","unavailable","camera","window","query","name","state","unimplemented","Camera"],"sourceRoot":""}